(load "../marm-v2/init.repl")

;  (begin-tx "Load in the nft environment")

;  (env-keys ["ku-admin" "ku-ops" "creatorGuard"])
;  (env-data
;    {
;      "ku-admin": {
;        "keys": [
;          "ku-admin"
;        ],
;        "pred": "keys-any"
;      },
;      "ku-ops": {
;        "keys": [
;          "ku-ops"
;        ],
;        "pred": "keys-any"
;      },
;      "ku-bank": {
;        "keys": [
;          "ku-bank"
;        ],
;        "pred": "keys-all"
;      },
;      "bank-guard": {
;        "keys": [
;          "ku-admin"
;        ],
;        "pred": "keys-all"
;      },
;      "creatorGuard": {
;          "keys": [ "creatorGuard" ],
;          "pred": "keys-any"
;        },
;      "collection": {
;        "name": "test-collection",
;        "totalSupply": 15.0,
;        "provenance": "abc",
;        "category": "Artwork",
;        "creator": "bob",
;        "creatorGuard": {
;          "keys": [ "creatorGuard" ],
;          "pred": "keys-any"
;        },
;        "description": "test-description",
;        "tiers": [
;           {
;            "tierId": "public",
;            "tierType": "PUBLIC",
;            "startTime": {"time": "2023-01-03T00:00:00Z"},
;            "endTime": {"time": "2024-01-03T00:00:00Z"},
;            "cost": 50.0,
;            "limit": -1.0
;          }
;        ]
;      },
;      "collection-name": "test-collection",
;      "tier-data": [
;        {
;          "tierId": "free",
;          "accounts": ["bob"]
;        },
;        {
;          "tierId": "discount",
;          "accounts": ["bob", "alice"]
;        }
;      ],
;      "can-offer": true,
;      "can-buy": true,
;      "can-transfer": true,
;      "can-burn": true,
;      "can-xchain": true,
;      "upgrade": false
;    }
;  )

;  ;  (load "kadenai-create.pact")
;  (commit-tx)
(begin-tx)
(env-data
  { 'ns-admin-keyset: []
  , 'ns-genesis-keyset:[]
  , 'ns-operate-keyset:[] })
;  (load "../root/fungible-v2.pact")
;  (load "../root/fungible-xchain-v1.pact")
;  (load "../root/gas-payer-v1.pact")
;  (load "../root/coin.pact")
(env-exec-config ["DisablePact44"])
(load "../marm-v2/marmalade/root/ns.pact")
(commit-tx)

(begin-tx)
(env-data
 { 'marmalade-admin: ["marmalade-admin"]
 , 'marmalade-ns-user: ["marmalade-admin"]
 , 'marmalade-ns-admin: ["marmalade-admin"]
 , 'ns: "marmalade"
 , 'upgrade: false })
 (env-sigs [
   { 'key: 'marmalade-admin
    ,'caps: []
    }])
(load "../marm-v2/marmalade/ns-marmalade.pact")
(env-data
 { 'marmalade-admin: ["marmalade-admin"]
 , 'marmalade-ns-user: ["marmalade-admin"]
 , 'marmalade-ns-admin: ["marmalade-admin"]
 , 'ns: "marmalade"
 , 'upgrade: true })
;  (load "./marm-v2/marmalade/concrete-policies/fungible-quote-policy/fungible-quote-policy-interface-v1.pact")
(load "../marm-v2/marmalade/policy-manager/policy-manager.pact")
(load "../marm-v2/marmalade/ledger.pact")
(commit-tx)

(begin-tx "load concrete-polices")
(load "../marm-v2/marmalade/concrete-policies/fungible-quote-policy/fungible-quote-policy-v1.pact")
(load "../marm-v2/marmalade/concrete-policies/non-fungible-policy/non-fungible-policy-v1.pact")
(load "../marm-v2/marmalade/concrete-policies/royalty-policy/royalty-policy-v1.pact")
(load "../marm-v2/marmalade/concrete-policies/collection-policy/collection-policy-v1.pact")

(use kip.token-policy-v2 [QUOTE_POLICY NON_FUNGIBLE_POLICY ROYALTY_POLICY COLLECTION_POLICY])
(marmalade.policy-manager.init (marmalade.ledger.ledger-guard))
(marmalade.policy-manager.add-concrete-policy QUOTE_POLICY marmalade.fungible-quote-policy-v1)
(marmalade.policy-manager.add-concrete-policy NON_FUNGIBLE_POLICY marmalade.non-fungible-policy-v1)
(marmalade.policy-manager.add-concrete-policy ROYALTY_POLICY marmalade.royalty-policy-v1)
(marmalade.policy-manager.add-concrete-policy COLLECTION_POLICY marmalade.collection-policy-v1)

(commit-tx)

(begin-tx "Load concrete-policy-config")

(use kip.token-policy-v2 [QUOTE_POLICY NON_FUNGIBLE_POLICY ROYALTY_POLICY COLLECTION_POLICY])
(module util GOV
  (defcap GOV () true)

  (defconst DEFAULT_CONCRETE_POLICY:object{kip.token-policy-v2.concrete-policy}
    { 'quote-policy: true
     ,'non-fungible-policy: true
     ,'royalty-policy: false
     ,'collection-policy:false
    }
  )
  (defconst DEFAULT_POLICIES:object{kip.token-policy-v2.token-policies}
    { 'concrete-policies:DEFAULT_CONCRETE_POLICY
     ,'immutable-policies: []
     ,'adjustable-policies:[]
    })
)

(commit-tx)


(begin-tx "load collection policy")
(env-data
  { 'marmalade-admin: ["marmalade-admin"]
  , 'marmalade-ns-user: ["marmalade-admin"]
  , 'marmalade-ns-admin: ["marmalade-admin"]
  , 'ns: "marmalade"
  , 'upgrade: false })
  (load "../marm-v2/marmalade/concrete-policies/collection-policy/collection-policy-v1.pact")
(commit-tx)

(begin-tx "create collection")

(env-keys ["ku-admin" "ku-ops" "ku-bank" "creatorGuard"])
(env-data
  {
    "ku-admin": {
      "keys": [
        "ku-admin"
      ],
      "pred": "keys-any"
    },
    "ku-ops": {
      "keys": [
        "ku-ops"
      ],
      "pred": "keys-any"
    },
    "ku-bank": {
      "keys": [
        "ku-bank"
      ],
      "pred": "keys-all"
    },
    "bank-guard": {
      "keys": [
        "ku-admin"
      ],
      "pred": "keys-all"
    },
    "creatorGuard": {
        "keys": [ "creatorGuard" ],
        "pred": "keys-any"
      },
    "collection": {
      "name": "test-collection",
      "totalSupply": 15.0,
      "provenance": "abc",
      "category": "Artwork",
      "creator": "bob",
      "creatorGuard": {
        "keys": [ "creatorGuard" ],
        "pred": "keys-any"
      },
      "description": "test-description",
      "tiers": [
         {
          "tierId": "public",
          "tierType": "PUBLIC",
          "startTime": {"time": "2023-01-03T00:00:00Z"},
          "endTime": {"time": "2024-01-03T00:00:00Z"},
          "cost": 50.0,
          "limit": -1.0
        }
      ]
    },
    "collection-name": "test-collection",
    "tier-data": [
      {
        "tierId": "free",
        "accounts": ["bob"]
      },
      {
        "tierId": "discount",
        "accounts": ["bob", "alice"]
      }
    ],
    "can-offer": true,
    "can-buy": true,
    "can-transfer": true,
    "can-burn": true,
    "can-xchain": true,
    "upgrade": false
  }
)
(load "kadenai-create.pact")


;  (use marmalade.collection-policy-v1)
(free.kadenai-create.create-collection (read-msg 'collection ) coin)
(commit-tx)


(begin-tx "Add Bank Account")
(env-keys ["ku-ops"])
(coin.create-account "BANK" (read-keyset "ku-bank"))
(free.kadenai-create.update-bank "BANK" "BANK")
 (commit-tx)


(begin-tx)
(env-chain-data { "block-time": (time "2023-01-03T20:00:00Z")})
(env-keys ["alice-key"])
(env-sigs
[{
  "key": "alice-key",
  "caps": [
      (coin.TRANSFER "alice" (free.kadenai-create.get-SPLITTER-account) 50.0)
  ]
}])

(free.kadenai-create.mint "test-collection" "alice" 1 ["bankAc","creator"])
(env-gas "table")
(expect-that "Amounts were transferred"
  (= [950.0 5.0 1045.0])
  [
    (coin.get-balance "alice")
    (coin.get-balance "BANK")
    (coin.get-balance "bob")
  ]
)

(commit-tx)
 