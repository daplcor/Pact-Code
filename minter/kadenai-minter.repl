(load "../marm-v2/init.repl")

(begin-tx "Load in the nft environment")

(env-keys ["ku-admin" "ku-ops" "creatorGuard"])
(env-data
  {
    "ku-admin": {
      "keys": [
        "ku-admin"
      ],
      "pred": "keys-any"
    },
    "ku-ops": {
      "keys": [
        "ku-ops"
      ],
      "pred": "keys-any"
    },
    "ku-bank": {
      "keys": [
        "ku-bank"
      ],
      "pred": "keys-all"
    },
    "bank-guard": {
      "keys": [
        "ku-admin"
      ],
      "pred": "keys-all"
    },
    "creatorGuard": {
        "keys": [ "creatorGuard" ],
        "pred": "keys-any"
      },

  

    "upgrade": false
  }
)
(commit-tx)

(begin-tx)
(env-data
  { 'ns-admin-keyset: []
  , 'ns-genesis-keyset:[]
  , 'ns-operate-keyset:[] })
;  (load "../root/fungible-v2.pact")
;  (load "../root/fungible-xchain-v1.pact")
;  (load "../root/gas-payer-v1.pact")
;  (load "../root/coin.pact")
(env-exec-config ["DisablePact44"])
(load "./marm-v2/marmalade/root/ns.pact")
(commit-tx)

(begin-tx)
(env-data
 { 'marmalade-admin: ["marmalade-admin"]
 , 'marmalade-ns-user: ["marmalade-admin"]
 , 'marmalade-ns-admin: ["marmalade-admin"]
 , 'ns: "marmalade"
 , 'upgrade: false })
 (env-sigs [
   { 'key: 'marmalade-admin
    ,'caps: []
    }])
(load "../marm-v2/marmalade/ns-marmalade.pact")
(env-data
 { 'marmalade-admin: ["marmalade-admin"]
 , 'marmalade-ns-user: ["marmalade-admin"]
 , 'marmalade-ns-admin: ["marmalade-admin"]
 , 'ns: "marmalade"
 , 'upgrade: true })
;  (load "./marm-v2/marmalade/concrete-policies/fungible-quote-policy/fungible-quote-policy-interface-v1.pact")
(load "../marm-v2/marmalade/policy-manager.pact")
(load "../marm-v2/marmalade/ledger.pact")
(commit-tx)

(begin-tx "load concrete-polices")
(load "../marm-v2/marmalade/concrete-policies/fungible-quote-policy/fungible-quote-policy-v1.pact")
(load "../marm-v2/marmalade/concrete-policies/non-fungible-policy/non-fungible-policy-v1.pact")
(load "../marm-v2/marmalade/concrete-policies/royalty-policy/royalty-policy-v1.pact")
(load "../marm-v2/marmalade/concrete-policies/collection-policy/collection-policy-v1.pact")

(use kip.concrete-policy-v1 [QUOTE_POLICY NON_FUNGIBLE_POLICY ROYALTY_POLICY COLLECTION_POLICY])
(marmalade.policy-manager.init (marmalade.ledger.ledger-guard))
(marmalade.policy-manager.add-concrete-policy QUOTE_POLICY marmalade.fungible-quote-policy-v1)
(marmalade.policy-manager.add-concrete-policy NON_FUNGIBLE_POLICY marmalade.non-fungible-policy-v1)
(marmalade.policy-manager.add-concrete-policy ROYALTY_POLICY marmalade.royalty-policy-v1)
;  (marmalade.policy-manager.add-concrete-policy COLLECTION_POLICY marmalade.collection-policy-v1)

(commit-tx)

(begin-tx)

(use kip.concrete-policy-v1 [QUOTE_POLICY NON_FUNGIBLE_POLICY ROYALTY_POLICY])
(module util GOV
  (defcap GOV () true)

  (defconst DEFAULT_CONCRETE_POLICY:object{kip.concrete-policy-v1.concrete-policy}
    { 'quote-policy: true
     ,'non-fungible-policy: true
     ,'royalty-policy: false
     ,'collection-policy:false
    }
  )
  (defconst DEFAULT_POLICIES:object{kip.token-policy-v2.token-policies}
    { 'concrete-policies:DEFAULT_CONCRETE_POLICY
     ,'immutable-policies: []
     ,'adjustable-policies:[]
    })
)
(commit-tx)

(begin-tx)
(env-keys ["ku-admin" "ku-ops" "creatorGuard"])

(env-data
  {
    "ku-admin": {
      "keys": [
        "ku-admin"
      ],
      "pred": "keys-any"
    },
    "ku-ops": {
      "keys": [
        "ku-ops"
      ],
      "pred": "keys-any"
    }, "upgrade": false})
(load "ku-token-policy-v2.pact")
(commit-tx)

(begin-tx "Load in the collection policy")
(load "./collection-policy.pact")
(commit-tx)

(begin-tx "Load Minter Test")

(load "./kadenai-minter.pact")

(commit-tx)

(begin-tx "Load ledger")
(use marmalade.ledger)
(use marmalade.policy-manager)

(env-data {
  "token-id": (create-token-id { 'uri: "test-uri", 'precision: 0, 'policies: util.DEFAULT_POLICIES } )
 ,"account": "account"
 ,"mint-guard": {"keys": ["account"], "pred": "keys-all"}
  })
  ;  (marmalade.ledger.create-token (read-msg 'token-id) 0 "test-uri" util.DEFAULT_POLICIES )
  (commit-tx)

  (begin-tx "mint")
  (env-sigs [
    { 'key: 'account
     ,'caps: [(marmalade.ledger.MINT "t:u5kvgh1HISROlQGLTQGF7gTzyjBtXxSe7BQjI3cPcC8" "account" 1.0)]
     }])

     (env-sigs [
      { 'key: 'bob
       ,'caps: [(marmalade.ledger.MINT "t:u5kvgh1HISROlQGLTQGF7gTzyjBtXxSe7BQjI3cPcC8" "bob" 1.0)]
       }])
  ;  (expect "create a default token with quote-policy, non-fungible-policy"
  ;    true
  ;    (create-token (read-msg 'token-id) 0 "test-uri" util.DEFAULT_POLICIES ))
  
  ;  (expect "mint a default token with quote-policy, non-fungible-policy"
  ;    true
  ;    (marmalade.ledger.mint (read-msg 'token-id )  (read-msg 'account ) (read-keyset 'mint-guard ) 1.0))
  (commit-tx)